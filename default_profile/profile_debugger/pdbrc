# https://github.com/python/cpython/blob/3.7/Lib/pdb.py#L1380
import os
from pprint import pprint

try:
    exec(os.path.expanduser("~/.pdbrc.py"))
except:
    pass

# alias pp pprint(%*)

# in the do_alias() function it mentions some examples and they sounded like
# useful alias to tack on!

# Print instance variables (usage "pi classInst")
alias pi {i:j for i,j in %1.__dict__.items()}
alias pr pp pi %1
# alias pi for k in %1.__dict__.keys(): print("%1.", k, "=", %1.__dict__[k])  # noqa
# Print instance variables in self
alias ps pi self

# Apr 07, 2019
# How in the world have I gone this long without noticing this isn't set up
# alias ? pinfo
# Kinda sucks now only ?func is valid not func?
# alias ?? pinfo2

# Been reading through the inspect docs a little

# Print a dictionary sorted by key.
alias pd pp {k: v for k, v in sorted(dict(%*).items(), key=lambda i: i[0])}

# Print the member variables of a thing.
# alias pi pd %*.__dict__

alias pii pd dict(inspect.getmembers(%1))

# Print the member variables of self.
alias ps pi self

# Print the locals.
alias pl pd locals()
alias pg pd globals()

# Next and list, and step and list.
alias nll n;;ll
alias nl n;;l
alias sl s;;l

# Oh i want up and down too
alias ul u;;l
alias dl u;;l
alias ull u;;ll
alias dll d;;ll

# Let's keep it going
alias who pp dir(%1)

# Vim: set ft=python:
